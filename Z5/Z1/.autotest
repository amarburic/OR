{"id":336301,"name":"Osnove ra\u010dunarstva (2015\/2016), Zada\u0107a 5","language":"C","required_compiler":"gcc","preferred_compiler":"gcc","compiler_features":[],"compiler_options":"-O1 -Wall -Wuninitialized -Winit-self -Wno-unused-result -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes","compiler_options_debug":"-ggdb -lm -pass-exit-codes","compile":"true","run":"false","test":"true","debug":"true","profile":"true","test_specifications":[{"id":"3255","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT1: testiramo da li funkcije ucitaj_ i zapisi_ daju gresku ako datoteke ne postoje\r\n    remove (\"paketi.dat\");\r\n    remove (\"skladista.dat\"); \/\/brisemo datoteke (ako postoje)\r\n    FILE *f;\r\n    printf(\"%i \", ucitaj_datoteke()); \/\/ne postoje\r\n    fwrite (\"OR\", 1, 2, f = fopen(\"paketi.dat\", \"w\"));\r\n    fclose(f);\r\n    remove (\"skladista.dat\"); \/\/ ako je kreirana funkcijom ucitaj_datoteke, opet je brisemo\r\n    printf(\"%i \", ucitaj_datoteke()); \/\/postoji samo jedna, neispravna\r\n}\r\n","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["0 0"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3256","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT2: testiramo dodaj_paket funkciju\r\n    printf(\"%i\\n\", dodaj_paket(\"CPU\", 70, 200.2f));\r\n    printf(\"%i\\n\", dodaj_paket(\"Monitor\", 5, 100.f));\r\n    printf(\"%i\\n\", dodaj_paket(\"Nesto1\", 0, 100.f));\r\n    printf(\"%i\\n\", dodaj_paket(\"Nesto2\", 1, 0.f));\r\n    printf(\"%i\\n\", dodaj_paket(\"Nesto3\", -10, -12.f));\r\n    printf(\"%i\\n\", dodaj_paket(\"Keyboard\", 10, 20.f));\r\n    printf(\"%i\\n\", dodaj_paket(\"Monitor\", 10, 120.f));\r\n    printf(\"Br. paketa: %i\\n\", br_paketa);\r\n    int i;\r\n    const struct Paket *p;\r\n    for (i = 0; i < br_paketa; ++i)\r\n        {\r\n            p = paketi + i;\r\n            printf (\"{'%s', %i, %.2f}\\n\", p->naziv_robe, p->kolicina, p->cijena);\r\n        }\r\n}\r\n","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["0\\n1\\n-1\\n-1\\n-1\\n2\\n3\\nBr. paketa: 4\\n{'CPU', 70, 200.20}\\n{'Monitor', 5, 100.00}\\n{'Keyboard', 10, 20.00}\\n{'Monitor', 10, 120.00}\\n"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3257","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT3: testiramo dodaj_skladiste funkciju\r\n    printf (\"%i\\n\", dodaj_skladiste(\"Novo Sarajevo\", 1000));\r\n    printf (\"%i\\n\", dodaj_skladiste(\"Ilidza\", 5000));\r\n    printf (\"%i\\n\", dodaj_skladiste(\"Alipasino polje\", 2000));\r\n    printf (\"%i\\n\", dodaj_skladiste(\"Bascarsija\", 0));\r\n    printf (\"%i\\n\", dodaj_skladiste(\"Pofalici\", 2700));\r\n    printf (\"%i\\n\", dodaj_skladiste(\"Butmir\", -1000));\r\n    printf (\"%i\\n\", dodaj_skladiste(\"Alipasino polje\", 3000));\r\n    printf (\"Br. skladista: %d\\n\", br_skladista);\r\n    int i;\r\n    const struct Skladiste *s;\r\n    for (i = 0; i < br_skladista; ++i)\r\n        {\r\n            s = skladista + i;\r\n            printf (\"{'%s', %i}\\n\", s->naziv, s->kapacitet);\r\n        }\r\n}\r\n","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["0\\n1\\n2\\n-1\\n3\\n-1\\n-1\\nBr. skladista: 4\\n{'Novo Sarajevo', 1000}\\n{'Ilidza', 5000}\\n{'Alipasino polje', 2000}\\n{'Pofalici', 2700}\\n"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3258","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT4: stavi_paket_u_skladiste\r\n    printf (\"%i \", dodaj_skladiste(\"Skladiste1\", 1000)); \/\/0\r\n    printf (\"%i \", dodaj_skladiste(\"2etsidalkS\", 2000)); \/\/1\r\n    printf (\"%i \", dodaj_paket(\"Paket1\", 100, 10.f)); \/\/0\r\n    printf (\"%i \", dodaj_paket(\"Paket2\", 200, 20.f)); \/\/1\r\n    printf (\"%i \", dodaj_paket(\"Paket3\", 300, 30.f)); \/\/2\r\n    printf (\"%i\\n\", dodaj_paket(\"Paket1\", 100, 10.f)); \/\/3\r\n    printf (\"%i \", stavi_paket_u_skladiste(0, 0)); \/\/1\r\n    printf (\"%i \", stavi_paket_u_skladiste(1, 0)); \/\/1\r\n    printf (\"%i \", stavi_paket_u_skladiste(0, 1)); \/\/0\r\n    printf (\"%i \", stavi_paket_u_skladiste(0, 0)); \/\/0\r\n    printf (\"%i \", stavi_paket_u_skladiste(2, 1)); \/\/1\r\n    printf (\"%i\\n\", stavi_paket_u_skladiste(3, 1)); \/\/1\r\n    int i, j;\r\n    const struct Skladiste *s;\r\n    const struct Paket *p;\r\n    for (i = 0; i < br_skladista; ++i)\r\n        {\r\n            s = skladista + i;\r\n            printf (\"Skladiste {%s, kapacitet: %d}:\\n\", s->naziv, s->kapacitet);\r\n            for (j = 0; j < s->br_paketa; ++j)\r\n                {\r\n                    p = s->sadrzaj[j];\r\n                    printf (\"    {%s, %dkg, %.2f KM\/kg}\\n\", p->naziv_robe, p->kolicina, p->cijena);\r\n                }\r\n        }\r\n}\r\n","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["0 1 0 1 2 3\\n1 1 0 0 1 1\\nSkladiste {Skladiste1, kapacitet: 1000}:\\n    {Paket1, 100kg, 10.00 KM\/kg}\\n    {Paket2, 200kg, 20.00 KM\/kg}\\nSkladiste {2etsidalkS, kapacitet: 2000}:\\n    {Paket3, 300kg, 30.00 KM\/kg}\\n    {Paket1, 100kg, 10.00 KM\/kg}\\n"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3259","require_symbols":[],"replace_symbols":[],"code":"remove (\"paketi.dat\");\r\nremove (\"skladista.dat\"); \/\/brisemo datoteke (ako postoje)\r\n_main();\r\n","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":"1\n1\n2\nneko\n3\nneko\n1000\n1\n2\nneko\n0\n4\n0\n"},"expected":["1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Nepostojece skladiste\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Unesite kapacitet skladista: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: neko\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Kapacitet skladista: 1000kg\\nPopunjeno: 0kg (0.00%)\\nPaketi:\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Evidentirana su 1 skladista sa ukupnim kapacitetom 1000kg.\\nOd toga je popunjeno 0kg (0.00%).\\nUkupna vrijednost robe u skladistima je 0.00 KM.\\n1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: "],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3260","require_symbols":[],"replace_symbols":[],"code":"remove (\"paketi.dat\");\r\nremove (\"skladista.dat\"); \/\/brisemo datoteke (ako postoje)\r\n_main();","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":"2\nbrasno\n100\n2\n4\n1\n6\n-1\n0\n5\n0\n"},"expected":["1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Unesite naziv robe: Unesite kolicinu robe: Unesite cijenu robe: Ulaz robe nije uspio\\n1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Evidentirana su 0 skladista sa ukupnim kapacitetom 0kg.\\nOd toga je popunjeno 0kg (0.00%).\\nUkupna vrijednost robe u skladistima je 0.00 KM.\\n1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: "],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3261","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT7:\r\n    printf (\"%i \", dodaj_skladiste(\"Novo Sarajevo\", 2500)); \/\/0\r\n    printf (\"%i \", dodaj_skladiste(\"Ilidza\", 2000)); \/\/1\r\n    printf (\"%i \", dodaj_paket(\"Sijalice\", 100, 1.f)); \/\/0\r\n    printf (\"%i \", dodaj_paket(\"Ekseri\", 2000, .20f)); \/\/1\r\n    printf (\"%i\\n\", dodaj_paket(\"Zica\", 200, 30.f)); \/\/2\r\n    printf (\"%i \", stavi_paket_u_skladiste(0, 1));\r\n    printf (\"%i \", stavi_paket_u_skladiste(2, 1));\r\n    printf (\"%i\\n\", stavi_paket_u_skladiste(1, 0));\r\n    const struct Skladiste * const s = skladista + 1;\r\n    const struct Paket * const p = s->sadrzaj[0];\r\n    printf (\"Skladiste[1].Paket[0]: (%s, kapacitet: %d)(%s, %d, %.2f)\\nStatistika:\\n\",\r\n            s->naziv, s->kapacitet, p->naziv_robe, p->kolicina, p->cijena);\r\n    statistika();\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["0 1 0 1 2\\n1 1 1\\nSkladiste[1].Paket[0]: (Ilidza, kapacitet: 2000)(Sijalice, 100, 1.00)\\nStatistika:\\nEvidentirana su 2 skladista sa ukupnim kapacitetom 4500kg.\\nOd toga je popunjeno 2300kg (51.11%).\\nUkupna vrijednost robe u skladistima je 6500.00 KM."],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3262","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT8: testiramo ulaz i izlaz robe\r\n    dodaj_skladiste(\"Skladiste\", 50000);\r\n    const struct Skladiste * const s = skladista;\r\n    \/\/sve isto kao AT9 samo se ovdje prvo brise PRVI paket\r\n    \/\/sto ostavlja \"rupu\" u nizu paketa...\r\n    printf (\"%i \", ulaz_robe(\"TV\", 100, 707.f));\r\n    printf (\"%i\\n\", ulaz_robe(\"TV\", 200, 707.f));\r\n    printf(\"Paketi: %d\\n\", s->br_paketa); \/\/2\r\n    printf (\"%.f\\n\", izlaz_robe(\"TV\", 100));\r\n    printf(\"Paketi: %d\\n\", s->br_paketa); \/\/1\r\n    printf (\"%.f\\n\", izlaz_robe(\"TV\", 100)); \/\/sad treba samo smanjiti za 100\r\n    printf(\"Paketi: %d\\n\", s->br_paketa); \/\/1\r\n    printf (\"%.f\\n\", izlaz_robe(\"TV\", 100)); \/\/sad pobrisati\r\n    printf(\"Paketi: %d\\n\", s->br_paketa); \/\/0\r\n    printf (\"%.f\\n\", izlaz_robe(\"TV\", 100)); \/\/sad nema paketa\r\n    printf(\"Paketi: %d\", s->br_paketa); \/\/0\r\n}\r\n","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["1 1\\nPaketi: 2\\n70700\\nPaketi: 1\\n70700\\nPaketi: 1\\n70700\\nPaketi: 0\\n-1\\nPaketi: 0"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3263","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT9: testiramo ulaz i izlaz robe\r\n    dodaj_skladiste(\"Skladiste\", 50000);\r\n    const struct Skladiste * const s = skladista;\r\n    \/\/sve isto kao AT8, samo zamijenjeni unosi, sad je 200 pa 100, brise se normalno\r\n    printf (\"%i \", ulaz_robe(\"TV\", 200, 707.f));\r\n    printf (\"%i\\n\", ulaz_robe(\"TV\", 100, 707.f));\r\n    printf(\"Paketi: %d\\n\", s->br_paketa); \/\/2\r\n    printf (\"%.f\\n\", izlaz_robe(\"TV\", 100));\r\n    printf(\"Paketi: %d\\n\", s->br_paketa); \/\/1\r\n    printf (\"%.f\\n\", izlaz_robe(\"TV\", 100)); \/\/sad treba samo smanjiti za 100\r\n    printf(\"Paketi: %d\\n\", s->br_paketa); \/\/1\r\n    printf (\"%.f\\n\", izlaz_robe(\"TV\", 100)); \/\/sad pobrisati\r\n    printf(\"Paketi: %d\\n\", s->br_paketa); \/\/0\r\n    printf (\"%.f\\n\", izlaz_robe(\"TV\", 100)); \/\/sad nema paketa\r\n    printf(\"Paketi: %d\", s->br_paketa); \/\/0\r\n}\r\n","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["1 1\\nPaketi: 2\\n70700\\nPaketi: 1\\n70700\\nPaketi: 1\\n70700\\nPaketi: 0\\n-1\\nPaketi: 0"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3264","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT10: testiramo zanimljiv scenario: ako imamo \"brasno 100kg\" i \"brasno 90kg\"\r\n \/\/     a brisemo (izlaz robe) \"brasno 90kg\", ono mora pobrisati 2. paket\r\n \/\/     a nikako smanjiti kolicinu prvog paketa\r\n    dodaj_skladiste(\"neko skladiste\", 224);\r\n    printf (\"%i \", ulaz_robe(\"TV\", 117, 707.f));\r\n    printf (\"%i \", ulaz_robe(\"TV\", 107, 707.f));\r\n    printf (\"%.f\\n\", izlaz_robe(\"TV\", 107)); \/\/brise 2. paket!\r\n    printf (\"Paketi[1].Kolicina: %d\\n\", paketi[1].kolicina);\r\n    printf (\"%.f\\n\", izlaz_robe(\"TV\", 117)); \/\/brise 1. paket!\r\n    printf (\"Paketi[0].Kolicina: %d\", paketi[0].kolicina);\r\n}\r\n","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["1 1 75649\\nPaketi[1].Kolicina: 0\\n82719\\nPaketi[0].Kolicina: 0"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3265","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT11: ulaz robe a nema niti jedno skladiste + obrisi_skladiste\r\n    printf (\"%i \", ulaz_robe(\"TV\", 117, 707.f));\r\n    printf (\"%i \", ulaz_robe(\"Serpa\", 100, 40.f));\r\n    \/\/dodajmo koji paket, onako? :P\r\n    printf (\"%i \", dodaj_paket(\"TV\", 117, 707.f));\r\n    printf (\"%i \", dodaj_paket(\"Serpa\", 100, 40.f));\r\n    \/\/probajmo ponovo\r\n    printf (\"%i \", ulaz_robe(\"TV\", 117, 707.f));\r\n    printf (\"%i\\n\", ulaz_robe(\"Serpa\", 100, 40.f));\r\n    \/\/dodajmo skladiste\r\n    printf (\"%i\\n\", dodaj_skladiste(\"Skladiste kapaciteta 150\", 150));\r\n    printf (\"%i \", dodaj_paket(\"TV\", 117, 707.f)); \/\/1\r\n    printf (\"%i\\n\", dodaj_paket(\"Serpa\", 100, 40.f)); \/\/0\r\n    \/\/brisi skladiste\r\n    printf (\"%i \", obrisi_skladiste (1));\r\n    printf (\"%i\\n\", obrisi_skladiste (0));\r\n    \/\/pokusaj ponovo dodati\r\n    printf (\"%i \", ulaz_robe(\"TV\", 117, 707.f)); \/\/0\r\n}\r\n","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["0 0 0 1 0 0\\n0\\n2 3\\n0 1\\n0"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3266","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT12: ogranicenje je i... skladista popunjena, ili paketi...\r\n    int i = 1, suma_s = 0, suma_p = 0;\r\n    char s[2] = \"\";\r\n    for (; i <= 100; ++i) \/\/prekoracimo kapacitet\r\n        {\r\n            s[0] = (char)i; \/\/generisimo razlicito ime za skladiste...\r\n            suma_s += dodaj_skladiste(s, 1);\r\n        }\r\n    for (i = 1; i <= 1010; ++i) \/\/prekoracimo kapacitet\r\n        suma_p += dodaj_paket(\"Paket\", 1, .2f);\r\n    printf (\"Zbir indeksa skladista: %d\\nZbir indeksa paketa: %d\\n\", suma_s, suma_p);\r\n    printf (\"Broj skladista: %d\\nBroj paketa: %d\", br_skladista, br_paketa);\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["Zbir indeksa skladista: 4950\\nZbir indeksa paketa: 499490\\nBroj skladista: 100\\nBroj paketa: 1000"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3267","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT13: dodavanje nekoliko skladista pa brisanje istih\r\n    statistika();\r\n    printf (\"%i \", dodaj_skladiste(\"skladiste 1\", 100));\r\n    printf (\"%i \", dodaj_skladiste(\"skladiste 2\", 100));\r\n    printf (\"%i \", dodaj_skladiste(\"skladiste 3\", 100));\r\n    printf (\"%i \", dodaj_skladiste(\"skladiste 4\", 100));\r\n    printf (\"%i\\n\", dodaj_skladiste(\"skladiste 5\", 100));\r\n    statistika();\r\n    printf (\"%i \", dodaj_skladiste(\"skladiste 6\", 100));\r\n    printf (\"%i \", dodaj_skladiste(\"skladiste 7\", 100));\r\n    printf (\"%i \", dodaj_skladiste(\"skladiste 8\", 100));\r\n    printf (\"%i \", dodaj_skladiste(\"skladiste 4\", 100)); \/\/vec postoji\r\n    printf (\"%i\\n\", dodaj_skladiste(\"skladiste 9\", 100));\r\n    statistika();\r\n    printf (\"%i \", obrisi_skladiste(3));\r\n    int i;\r\n    for (i = 0; i < 15; ++i)\r\n        printf (\"%i \", obrisi_skladiste(0)); \/\/brisi prvo skladiste uvijek\r\n    printf (\"\\nBr. skladista: %i\", br_skladista);\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["Evidentirana su 0 skladista sa ukupnim kapacitetom 0kg.\\nOd toga je popunjeno 0kg (0.00%).\\nUkupna vrijednost robe u skladistima je 0.00 KM.\\n0 1 2 3 4\\nEvidentirana su 5 skladista sa ukupnim kapacitetom 500kg.\\nOd toga je popunjeno 0kg (0.00%).\\nUkupna vrijednost robe u skladistima je 0.00 KM.\\n5 6 7 -1 8\\nEvidentirana su 9 skladista sa ukupnim kapacitetom 900kg.\\nOd toga je popunjeno 0kg (0.00%).\\nUkupna vrijednost robe u skladistima je 0.00 KM.\\n1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 \\nBr. skladista: 0"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3268","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT 14, dodavanje i brisanje paketa\r\n    printf (\"Paketi: %i\\n\", br_paketa);\r\n    printf (\"%i \",  dodaj_paket(\"a\", 1, 1.f));\r\n    printf (\"%i \",  dodaj_paket(\"a\", 1, 0.f));\r\n    printf (\"%i \",  dodaj_paket(\"a\", 1, 1.f));\r\n    printf (\"%i \",  dodaj_paket(\"ovaj valja\", 1, 1.f));\r\n    printf (\"%i \",  dodaj_paket(\"ne valja\", -1, 1.f));\r\n    printf (\"%i \",  dodaj_paket(\"a\", 1, 1.f));\r\n    printf (\"%i \",  dodaj_paket(\"1\", 0, 1.f));\r\n    printf (\"%i \",  dodaj_paket(\"a\", 1, 1.f));\r\n    printf (\"%i \",  dodaj_paket(\"a\", 1, -1.f));\r\n    printf (\"%i\\n\",  dodaj_paket(\"b\", 1, 1.f));\r\n    printf (\"Paketi: %i\\n\", br_paketa);\r\n    int i;\r\n    for (i = -1; i < 10; ++i)\r\n        printf (\"%i \",  obrisi_paket(i));\r\n    printf (\"\\nPaketi: %i\\nKolicine: \", br_paketa);\r\n    for (i = 0; i < br_paketa; ++i)\r\n        printf (\"%i \", paketi[i].kolicina);\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["Paketi: 0\\n0 -1 1 2 -1 3 -1 4 -1 5\\nPaketi: 6\\n0 1 1 1 1 1 1 0 0 0 0\\nPaketi: 6\\nKolicine: 0 0 0 0 0 0"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3269","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT15: brisanje paketa preko izlaz_robe\r\n    dodaj_skladiste(\"neko skladiste 1\", 500);\r\n    dodaj_skladiste(\"neko skladiste 2\", 400);\r\n    dodaj_paket(\"brasno\", 100, 1.f);\r\n    dodaj_paket(\"brasno\", 200, 1.f);\r\n    dodaj_paket(\"brasno\", 300, 1.f);\r\n    dodaj_paket(\"brasno\", 200, 1.f);\r\n    dodaj_paket(\"brasno\", 100, 1.f);\r\n    printf (\"%i \", stavi_paket_u_skladiste(0, 0));\r\n    printf (\"%i \", stavi_paket_u_skladiste(1, 0));\r\n    printf (\"%i \", stavi_paket_u_skladiste(2, 0)); \/\/0, prekoracuje kap. skladista\r\n    printf (\"%i \", stavi_paket_u_skladiste(2, 1));\r\n    printf (\"%i \", stavi_paket_u_skladiste(3, 1)); \/\/0, isto kao iznad\r\n    printf (\"%i \", stavi_paket_u_skladiste(3, 0));\r\n    printf (\"%i\\n\", stavi_paket_u_skladiste(4, 1));\r\n    printf (\"%.f \", izlaz_robe(\"brasno\", 350)); \/\/nema paketa\r\n    printf (\"%.f \", izlaz_robe(\"brasno\", 100));\r\n    printf (\"%.f \", izlaz_robe(\"brasno\", 200));\r\n    printf (\"%.f \", izlaz_robe(\"brasno\", 300));\r\n    printf (\"%.f \", izlaz_robe(\"brasno\", 193)); \/\/neka ostane malo u ovom paketu...\r\n    printf (\"%.f\\n\", izlaz_robe(\"brasno\", 100));\r\n    \/\/svi paketi pobrisani... osim jednog, ostalo mu je 7kg\r\n    printf (\"Paketi: %i, kolicine: \", br_paketa);\r\n    int i;\r\n    for (i = 0; i < br_paketa; ++i)\r\n        printf (\"%i \", paketi[i].kolicina);\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["1 1 0 1 0 1 1 \\n-1 100 200 300 193 100 \\nPaketi: 5, kolicine: 0 0 0 7 0"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3270","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT16: promijeni skladiste\r\n    dodaj_skladiste(\"skladiste 1\", 500);\r\n    dodaj_skladiste(\"skladiste 2\", 550);\r\n    printf (\"Skladiste 1: '%s'\\n\", skladista[0].naziv);;\r\n    \/\/ime\r\n    printf (\"%i\\n\", promijeni_skladiste(0, \"skladiste novo 1.1\", 500)); \/\/1\r\n    printf (\"Skladiste 1: '%s'\\n\", skladista[0].naziv);\r\n    printf (\"%i\\n\", promijeni_skladiste(0, \"skladiste 2\", 500)); \/\/0 (vec postoji)\r\n    printf (\"Skladiste 1: '%s'\\n\", skladista[0].naziv);\r\n    printf (\"%i\\n\", promijeni_skladiste(1, \"skladiste 2\", 550)); \/\/1 (isto ime, moze!)\r\n    printf (\"Skladiste 2: '%s'\\n\", skladista[1].naziv);\r\n    \/\/kapacitet\r\n    printf (\"%i\\n\", promijeni_skladiste(1, \"skladiste 2\", 250)); \/\/1\r\n    printf (\"Skladiste 2: %i\\n\", skladista[1].kapacitet);\r\n    printf (\"%i\\n\", promijeni_skladiste(1, \"skladiste 2\", -200)); \/\/0\r\n    printf (\"Skladiste 2: %i\\n\", skladista[1].kapacitet);\r\n    printf (\"%i\\n\", promijeni_skladiste(1, \"skladiste 2\", 0)); \/\/0\r\n    printf (\"Skladiste 2: %i\\n\", skladista[1].kapacitet);\r\n    \/\/ime i kapacitet\r\n    printf (\"%i\\n\", promijeni_skladiste(1, \"skladiste 3\", 0)); \/\/1\r\n    printf (\"Skladiste 2: {'%s', %i}\", skladista[1].naziv, skladista[1].kapacitet);\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["Skladiste 1: 'skladiste 1'\\n1\\nSkladiste 1: 'skladiste novo 1.1'\\n0\\nSkladiste 1: 'skladiste novo 1.1'\\n1\\nSkladiste 2: 'skladiste 2'\\n1\\nSkladiste 2: 250\\n0\\nSkladiste 2: 250\\n0\\nSkladiste 2: 250\\n0\\nSkladiste 2: {'skladiste 2', 250}"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3271","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT17: promijeni_skladiste, ali... kad je popunjeno\r\n    printf (\"%i \", dodaj_skladiste(\"ABC CDE\", 500));\r\n    printf (\"%i \", ulaz_robe(\"Roba 1\", 150, 1.f));\r\n    printf (\"%i \", ulaz_robe(\"Roba 2\", 250, 1.f));\r\n    printf (\"%i\\n\", ulaz_robe(\"Roba 3\", 50, 1.f));\r\n    \/\/skladiste je sad popunjeno 450\/500\r\n    printf (\"%i\\n\", promijeni_skladiste(0, \"ABC CDE\", 520)); \/\/1\r\n    printf (\"Kapacitet: %i\\n\", skladista[0].kapacitet);\r\n    printf (\"%i\\n\", promijeni_skladiste(0, \"ABC CDE\", 450)); \/\/1\r\n    printf (\"Kapacitet: %i\\n\", skladista[0].kapacitet);\r\n    printf (\"%i\\n\", promijeni_skladiste(0, \"ABC CDE\", 460)); \/\/1\r\n    printf (\"Kapacitet: %i\\n\", skladista[0].kapacitet);\r\n    \/\/skladiste je popunjeno 450\/460, pokusavamo postaviti\r\n    \/\/kapacitet na 445 (manji), to je greska, ne mozemo smanjiti kapacitet\r\n    \/\/ako je vec popunjeno iznad novog kapaciteta\r\n    printf (\"%i\\n\", promijeni_skladiste(0, \"ABC CDE\", 445)); \/\/0\r\n    printf (\"Kapacitet: %i\", skladista[0].kapacitet);\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["0 1 1 1\\n1\\nKapacitet: 520\\n1\\nKapacitet: 450\\n1\\nKapacitet: 460\\n0\\nKapacitet: 460"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3272","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT18: dodavanje preko 100 paketa u skladiste eksplicitnim stavljanjem\r\n    int i, suma = 0;\r\n    for (i = 0; i < 105; ++i)\r\n        dodaj_paket(\"paket neki\", 1, 10.f);\r\n    dodaj_skladiste(\"skladiste neko\", 300); \/\/po kapacitetu, svi paketi mogu stati...\r\n    for (i = 0; i < br_paketa; ++i)\r\n        suma += stavi_paket_u_skladiste(i, 0);\r\n    printf(\"Ubaceno paketa: %i\", suma); \/\/100\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["Ubaceno paketa: 100"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3273","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT19: dodavanje preko 100 paketa u skladiste, sofisticiranije\r\n \/\/      kada se popuni kapacitet 1. skladista, paket se prebacuje u sljedece...\r\n \/\/      da li je isto i kada se popuni kapacitet u smislu skladista[1].br_paketa?\r\n    int i, suma = 0;\r\n    dodaj_skladiste(\"skladiste neko 1\", 300); \/\/po kapacitetu, svi paketi mogu stati...\r\n    dodaj_skladiste(\"skladiste neko 2\", 300); \/\/ovdje ide preostalih 5 paketa\r\n    for (i = 0; i < 105; ++i)\r\n        suma += ulaz_robe (\"roba neka\", 1, 1.f);\r\n    printf(\"Ubaceno paketa: %i\\n\", suma); \/\/105\r\n    printf(\"Skladiste[0].br_paketa: %i\\n\", skladista[0].br_paketa); \/\/100\r\n    printf(\"Skladiste[1].br_paketa: %i\\n\", skladista[1].br_paketa); \/\/5\r\n    \/\/da vidimo jesu li paketi dobro rasporedjeni\r\n    const struct Skladiste *s = skladista;\r\n    int x = paketi == s->sadrzaj[0] \/\/prvi paket u prvo skladiste\r\n            && paketi + 99 == s->sadrzaj[99]; \/\/100. paket isto u prvo skladiste\r\n    s++; \/\/sljedece skladiste\r\n    int y = paketi + 100 == s->sadrzaj[0] \/\/101. paket u drugo skladiste\r\n            && paketi + 104 == s->sadrzaj[4]; \/\/105. paket isto u 2. skladiste\r\n    printf (\"Paketi dobro rasporedjeni? (1 1): (%i %i)\", x, y);\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["Ubaceno paketa: 105\\nSkladiste[0].br_paketa: 100\\nSkladiste[1].br_paketa: 5\\nPaketi dobro rasporedjeni? (1 1): (1 1)"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3274","require_symbols":[],"replace_symbols":[],"code":"{\/\/AT20: statistika... ali s pobrisanim paketima\r\n    dodaj_skladiste(\"A B\", 300);\r\n    ulaz_robe(\"100\", 100, .1f);\r\n    ulaz_robe(\"200\", 100, .1f);\r\n    ulaz_robe(\"300\", 100, .1f);\r\n    printf (\"Paketi: %i\\n\", br_paketa); \/\/3\r\n    izbaci_paket_iz_skladista(1, 0);\r\n    float x = izlaz_robe(\"100\", 100);\r\n    float y = izlaz_robe(\"200\", 100); \/\/-1, paket izbacen  iznad...\r\n    float z = izlaz_robe(\"300\", 100);\r\n    printf (\"%.f %.f %.f\\n\", x, y, z);\r\n    statistika(); \/\/da vidimo ima li dijeljenja s nulom...\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["Paketi: 3\\n10 -1 10\\nEvidentirana su 1 skladista sa ukupnim kapacitetom 300kg.\\nOd toga je popunjeno 0kg (0.00%).\\nUkupna vrijednost robe u skladistima je 0.00 KM."],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3275","require_symbols":[],"replace_symbols":[],"code":"\r\n{\/\/AT21: izbaci_paket_iz_skladista\r\n    \/\/sve RUCNO popunjavamo\r\n    struct Paket p[] = {\r\n            {\"Paket 1\", 10, 0.1f},\r\n            {\"Paket 2\", 10, 0.1f},\r\n            {\"Paket 3\", 10, 0.1f},\r\n            {\"Paket 4\", 10, 0.1f},\r\n            {\"Paket 5\", 10, 0.1f},\r\n            {\"Paket 6\", 10, 0.1f},\r\n            {\"Paket 7\", 10, 0.1f},\r\n            {\"Paket 8\", 10, 0.1f},\r\n            {\"Paket 9\", 10, 0.1f},\r\n            {\"Paket 0\", 10, 0.1f}\r\n        };\r\n    const int n = sizeof p \/ sizeof (struct Paket);\r\n    int i;\r\n    for (i = 0; i < n; ++i)\r\n        {\r\n            paketi[i] = p[i];\r\n            br_paketa++;\r\n        }\r\n    struct Skladiste s[] = {{\"Skladiste 1\", 1000}, {\"Skladiste 2\", 2000}};\r\n    skladista[0] = s[0];\r\n    skladista[1] = s[1];\r\n    br_skladista = 2;\r\n\r\n    skladista[0].br_paketa = n \/ 2;\r\n    skladista[0].sadrzaj[0] = &paketi[1];\r\n    skladista[0].sadrzaj[1] = &paketi[3];\r\n    skladista[0].sadrzaj[2] = &paketi[7];\r\n    skladista[0].sadrzaj[3] = &paketi[8];\r\n    skladista[0].sadrzaj[4] = &paketi[9];\r\n\r\n    skladista[1].br_paketa = n \/ 2;\r\n    skladista[1].sadrzaj[0] = &paketi[0];\r\n    skladista[1].sadrzaj[1] = &paketi[2];\r\n    skladista[1].sadrzaj[2] = &paketi[4];\r\n    skladista[1].sadrzaj[3] = &paketi[6];\r\n    skladista[1].sadrzaj[4] = &paketi[5];\r\n\r\n    printf (\"%i \", izbaci_paket_iz_skladista(4, 0)); \/\/0\r\n    printf (\"%i \", skladista[0].br_paketa); \/\/5\r\n    printf (\"%i \", izbaci_paket_iz_skladista(4, 1)); \/\/1\r\n    printf (\"%i \", skladista[1].br_paketa); \/\/4\r\n    printf (\"%i \", izbaci_paket_iz_skladista(4, 1)); \/\/0 vec izbacen\r\n    printf (\"%i\\n\", skladista[1].br_paketa); \/\/4\r\n    \/\/da vidimo je li redoslijed paketa ostao isti\r\n    \/\/tj. da li su paketi samo pomjereni lijevo\r\n    int x = skladista[1].sadrzaj[2] == paketi + 6\r\n         && skladista[1].sadrzaj[3] == paketi + 5;\r\n    printf (\"%i\\n\", x);\r\n    printf (\"%i \", izbaci_paket_iz_skladista(4, 2)); \/\/0 nema skladista\r\n    printf (\"%i \", izbaci_paket_iz_skladista(11, 2)); \/\/0 nema paketa\r\n    printf (\"%i \", izbaci_paket_iz_skladista(-1, 2)); \/\/0 nema paketa\r\n    printf (\"%i \", izbaci_paket_iz_skladista(0, -2)); \/\/0 nema skladista\r\n    printf (\"%i \", izbaci_paket_iz_skladista(1, 0)); \/\/1\r\n    printf (\"%i\\n\", skladista[0].br_paketa); \/\/5\r\n    \/\/da li su pomjereni...\r\n    int y = skladista[0].sadrzaj[0] == paketi + 3\r\n         && skladista[0].sadrzaj[1] == paketi + 7\r\n         && skladista[0].sadrzaj[2] == paketi + 8\r\n         && skladista[0].sadrzaj[3] == paketi + 9;\r\n    printf (\"%i\", y);\r\n}","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["0 5 1 4 0 4\\n1\\n0 0 0 0 1 4\\n1"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3276","require_symbols":[],"replace_symbols":[],"code":"\/\/ako ucitavanje ili snimanje datoteka ne uspije\r\n\/\/funkcija ucitaj_ i zapisi_ datoteke ce vratiti 0\r\n\/\/ali, u postavci zadatka jos kaze da program treba zavrsiti\r\n\/\/sa 1 (umjesto sa 0) ako ucitavanje\/snimanje ne bude uspjesno\r\n\/\/znaci, main funkcija mora nekako zavrsiti sa 1, ili return 1\r\n\/\/ili exit (1). Ovaj autotest to testira!\r\n\r\n\r\n\/\/nastimajmo da fopen u ovom autotestu vraca NULL\r\n\/\/cime efektivno simuliramo neuspjesno ucitavanje\/snimanje\r\n\/\/datoteka...\r\n\/\/proslijedjen je ulaz 0, ali ni to ne bi trebao program da pita...\r\n\r\nint x = _main();\r\n\r\n\/\/ovo ce biti ispisano ako korisnik NIJE koristio\r\n\/\/exit(), nego return 1 iz maina...\r\n\/\/ako je, pak, koristio exit(), onda ce biti ispisan alternativni\r\n\/\/rezultat\r\nprintf (\"Izlaz programa\/maina: <%d>\", x);\r\n","global_top":"#include <stdlib.h>\r\n\/\/samo ce vratiti NULL (simulira neuspjeh fopen funkcije)\r\nvoid *MojaFun (const char *ime, const char *rezim) {return NULL;}\r\n#define fopen MojaFun\r\n\/\/ova fun ce se pozvati ako je korisnik koristio exit\r\nvoid MojExit (int code)\r\n    {\r\n        printf (\"Izlaz programa: <%d>\\n\", code);\r\n        \/\/zbog autotestova...\r\n        printf (\"====TEST====\");\r\n        \/\/pozovi pravu exit...\r\n        exit (code);\r\n    }\r\n#define exit MojExit","global_above_main":"","running_params":{"timeout":10,"vmem":1000000,"stdin":"0\n"},"expected":["Izlaz programa\/maina: <1>","Izlaz programa: <1>"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3277","require_symbols":[],"replace_symbols":[],"code":"\/\/pobrisi datoteke ako postoje...\r\nremove (\"skladista.dat\");\r\nremove (\"paketi.dat\");\r\n\/\/uneseno je jedno skladiste kapaciteta 1000\r\n\/\/uneseno je 500kg brasna\r\n\r\nint x = _main();\r\nif (x != 0) printf(\"Main funckija nije vratila 0!\\n\");\r\nprintf(\"\\nAutotest:\\n\\nBroj paketa: %d\\n\", br_paketa);\r\nprintf(\"Broj skladista: %d\\n\", br_skladista);\r\nprintf(\"Skladiste {'%s': %d}\\n\", skladista[0].naziv, skladista[0].kapacitet);\r\nprintf(\"Broj paketa u prvom skladistu: %d\\n\", skladista[0].br_paketa);\r\nprintf(\"Paket {'%s': %d, %.2fKM\/kg}\\n\", paketi[0].naziv_robe, paketi[0].kolicina, paketi[0].cijena);\r\nprintf(\"Paket u skladistu: %s\\n\\n\", paketi == skladista[0].sadrzaj[0] ? \"DA\" : \"NE\");\r\n\/\/pobrkajmo sad podatke, npr. skladiste.kapacitet, paket.cijena i paket.kolocina\r\n\/\/kada pozovemo ucitaj_datoteke, ovo sve treba da se pobrise i zamijeni podacima iz datoteke!\r\npaketi[0].cijena = 100.f;\r\npaketi[0].kolicina = 1;\r\nskladista[0].br_paketa = 20;\r\nskladista[0].kapacitet = 25;\r\n\/\/promijenimo i nazive...\r\nskladista[0].naziv[1] = 'K';\r\npaketi[0].naziv_robe[0] = 'B';\r\n\/\/kao i globalne varijable\r\nbr_paketa = br_skladista = 24;\r\n\/\/ucitavanje datoteka treba da prebrise ove izmjene iznad...\r\nint y = ucitaj_datoteke();\r\nprintf(\"Ucitavanje uspjesno: %s\\nUcitani podaci:\\n\", y ? \"DA\" : \"NE\");\r\nprintf(\"Broj paketa: %d\\n\", br_paketa);\r\nprintf(\"Broj skladista: %d\\n\", br_skladista);\r\nprintf(\"Skladiste {'%s': %d}\\n\", skladista[0].naziv, skladista[0].kapacitet);\r\nprintf(\"Broj paketa u prvom skladistu: %d\\n\", skladista[0].br_paketa);\r\nprintf(\"Paket {'%s': %d, %.2fKM\/kg}\\n\", paketi[0].naziv_robe, paketi[0].kolicina, paketi[0].cijena);\r\nprintf(\"Paket u skladistu: %s\", paketi == skladista[0].sadrzaj[0] ? \"DA\" : \"NE\");","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":"1\n3\nskladiste 1\n1000\n0\n2\nbrasno tip 500\n500\n0.5\n0\n"},"expected":["1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Unesite kapacitet skladista: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Unesite naziv robe: Unesite kolicinu robe: Unesite cijenu robe: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: \\nAutotest:\\n\\nBroj paketa: 1\\nBroj skladista: 1\\nSkladiste {'skladiste 1': 1000}\\nBroj paketa u prvom skladistu: 1\\nPaket {'brasno tip 500': 500, 0.50KM\/kg}\\nPaket u skladistu: DA\\n\\nUcitavanje uspjesno: DA\\nUcitani podaci:\\nBroj paketa: 1\\nBroj skladista: 1\\nSkladiste {'skladiste 1': 1000}\\nBroj paketa u prvom skladistu: 1\\nPaket {'brasno tip 500': 500, 0.50KM\/kg}\\nPaket u skladistu: DA"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3278","require_symbols":[],"replace_symbols":[],"code":"remove (\"skladista.dat\");\r\nremove (\"paketi.dat\");\r\nint x = _main();\r\nif (x != 0)\r\n    printf (\"Main NIJE vratio nulu!\\n\");","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":"3\nneka roba\n10\n2\nneka roba\n200\n10\n1\n1\n2\nneko\n4\nananas\n5\nnepostojece\n3\nneko skladiste\n0\n3\nneko\n-1\n3\nneko skladiste\n20\n3\nneko novo\n200\n1\n2\nneko\n2\nneko skladiste\n4\nneko\n4\nneko novo\nneko novo\n205\n2\nneko novo\n0\n4\n2\nfrizider\n25\n700\n1\n2\nneko skladiste\n2\nneko novo\n0\n0\n"},"expected":["1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Unesite naziv robe: Unesite kolicinu robe: Izlaz robe nije uspio\\n1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Unesite naziv robe: Unesite kolicinu robe: Unesite cijenu robe: Ulaz robe nije uspio\\n1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Nepostojece skladiste\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista koje mijenjate: Nepostojece skladiste\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista koje brisete: Nepostojece skladiste\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Unesite kapacitet skladista: Neispravni podaci\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Unesite kapacitet skladista: Neispravni podaci\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Unesite kapacitet skladista: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Unesite kapacitet skladista: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: neko skladiste\\nneko novo\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Nepostojece skladiste\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Kapacitet skladista: 20kg\\nPopunjeno: 0kg (0.00%)\\nPaketi:\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista koje mijenjate: Nepostojece skladiste\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista koje mijenjate: Unesite novi naziv: Unesite novi kapacitet skladista: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Kapacitet skladista: 205kg\\nPopunjeno: 0kg (0.00%)\\nPaketi:\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Evidentirana su 2 skladista sa ukupnim kapacitetom 225kg.\\nOd toga je popunjeno 0kg (0.00%).\\nUkupna vrijednost robe u skladistima je 0.00 KM.\\n1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Unesite naziv robe: Unesite kolicinu robe: Unesite cijenu robe: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Kapacitet skladista: 20kg\\nPopunjeno: 0kg (0.00%)\\nPaketi:\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Kapacitet skladista: 205kg\\nPopunjeno: 25kg (12.20%)\\nPaketi:\\n- frizider (25kg, 700.00 KM\/kg)\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: "],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3279","require_symbols":[],"replace_symbols":[],"code":"remove (\"skladista.dat\");\r\nremove (\"paketi.dat\");\r\nint x = _main();\r\nif (x != 0) printf(\"Main funckija nije vratila 0!\\n\");","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":"-2\n6\n1\n3\nneko1\n10\n3\nneko2\n50\n0\n2\nbrasno\n5\n1\n2\nbrasno\n10\n1\n2\nbrasno\n6\n1\n4\n3\nbrasno\n6\n4\n1\n2\nneko1\n2\nneko2\n0\n0\n"},"expected":["1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Unesite kapacitet skladista: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Unesite kapacitet skladista: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Unesite naziv robe: Unesite kolicinu robe: Unesite cijenu robe: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Unesite naziv robe: Unesite kolicinu robe: Unesite cijenu robe: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Unesite naziv robe: Unesite kolicinu robe: Unesite cijenu robe: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Evidentirana su 2 skladista sa ukupnim kapacitetom 60kg.\\nOd toga je popunjeno 21kg (35.00%).\\nUkupna vrijednost robe u skladistima je 21.00 KM.\\n1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Unesite naziv robe: Unesite kolicinu robe: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: Evidentirana su 2 skladista sa ukupnim kapacitetom 60kg.\\nOd toga je popunjeno 15kg (25.00%).\\nUkupna vrijednost robe u skladistima je 15.00 KM.\\n1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: 1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Kapacitet skladista: 10kg\\nPopunjeno: 5kg (50.00%)\\nPaketi:\\n- brasno (5kg, 1.00 KM\/kg)\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: Unesite naziv skladista: Kapacitet skladista: 50kg\\nPopunjeno: 10kg (20.00%)\\nPaketi:\\n- brasno (10kg, 1.00 KM\/kg)\\n1) Spisak skladista\\n2) Podaci o skladistu\\n3) Novo skladiste\\n4) Promijeni skladiste\\n5) Obrisi skladiste\\n0) Povratak na glavni meni\\nUnesite vas izbor: 1) Skladista\\n2) Ulaz robe\\n3) Izlaz robe\\n4) Statistika\\n0) Izlaz\\nUnesite vas izbor: "],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3280","require_symbols":[],"replace_symbols":[],"code":"\/\/ Trivijalni test sa datotekom\r\nremove (\"paketi.dat\");\r\nremove (\"skladista.dat\"); \/\/brisemo datoteke (ako postoje)\r\nstruct Paket p = {\"RAM plocice\", 100, 40};\r\nbr_paketa = 1;\r\npaketi[0] = p;\r\nprintf(\"%i\\n\", zapisi_datoteke()); \/\/ snimamo, ispisuje 1\r\npaketi[0].kolicina = paketi[0].naziv_robe[0] = br_paketa = 0; \/\/resetujemo\r\np = paketi[0];\r\nprintf(\"Prije ucitavanja!\\nBroj paketa: %d\\nKolicina prvog: %d, Naziv prvog: '%s'\\n\",\r\n   br_paketa, p.kolicina, p.naziv_robe);\r\nprintf(\"%i\\n\", ucitaj_datoteke()); \/\/ponovo ucitavamo, ispisuje 1\r\np = paketi[0];\r\nprintf(\"Nakon ucitavanja!\\nBroj paketa: %d\\nKolicina prvog: %d, Naziv prvog: '%s'\",\r\n   br_paketa, p.kolicina, p.naziv_robe);\r\n","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["1\\nPrije ucitavanja!\\nBroj paketa: 0\\nKolicina prvog: 0, Naziv prvog: ''\\n1\\nNakon ucitavanja!\\nBroj paketa: 1\\nKolicina prvog: 100, Naziv prvog: 'RAM plocice'"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":"3281","require_symbols":[],"replace_symbols":[],"code":"\/\/ Test dva izlaza robe koji ne smiju uspjeti\r\ndodaj_skladiste(\"Skladiste\", 50000);\r\nconst struct Skladiste * const s = skladista;\r\nprintf (\"%i \", ulaz_robe(\"TV\", 200, 707.f));\r\nprintf (\"%i\\n\", ulaz_robe(\"TV\", 100, 707.f));\r\n\r\n \/\/ Naziv robe je case sensitive\r\nprintf (\"%.f \", izlaz_robe(\"tv\", 100));\r\n\r\n\/\/ Ako niti u jednom skladistu ne postoji paket sa datim nazivom\r\n\/\/ i istom ili vecom kolicinom robe, funkcija treba vratiti broj -1.\r\nprintf (\"%.f\", izlaz_robe(\"TV\", 201)); ","global_above_main":"","global_top":"","running_params":{"timeout":10,"vmem":1000000,"stdin":""},"expected":["1 1\\n-1 -1"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"}]}